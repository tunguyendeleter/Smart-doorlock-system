#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <SPI.h>
#include <MFRC522.h>
#include <string.h>
#define RELAY_PIN A0
#define UP '2'
#define DOWN '8'
#define LEFT '4'
#define RIGHT '6'
#define GO '5'
#define ON 1
#define OFF 0
#define RST_PIN 9
#define SS_PIN 10
#define led A0

int UID[4];
int ID1[4] = {0x63, 0x9A, 0x15, 0x13}; //uid for user card
char initial_password[4] = {'2','3','5','6'};
unsigned char i = 0;
unsigned char RF_FLAG = 0;
const byte ROWS = 4; //four rows
const byte COLS = 4; //four columns
byte rowPins[ROWS] = {2, 3, 4, 5}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {6, 7, 8, 9}; //connect to the column pinouts of the keypad
char hexaKeys[ROWS][COLS] = {
  {'1','2','3','A'},
  {'4','5','6','B'},
  {'7','8','9','C'},
  {'*','0','#','D'}
};
uint8_t arrow[] = {
  B01000,
  B01100,
  B01110,
  B01111,
  B01111,
  B01110,
  B01100,
  B01000
};
typedef struct menuDisplay {
  String menuID;
  struct menuDisplay* PRE;
  String list1;
  String list2;void(*activationOn) (unsigned char);
  String list3;void(*activationOff) (unsigned char);
  String list4;
  struct menuDisplay* NEXT;
} menuDisplay;
struct menuDisplay menu1, menu2, menu3, menu4, menu5;
menuDisplay* menuPtr = &menu1;

MFRC522 mfrc522(SS_PIN, RST_PIN);
Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 
LiquidCrystal_I2C lcd(0x27,20,4);  // set the LCD address to 0x27 for a 16 chars and 2 line display

void activation(unsigned char input)
{
  if(input == ON){
    lcd.setCursor(9,2);
    lcd.print("         ");
    lcd.setCursor(9,1);
    lcd.print("  LED ON");
    digitalWrite(RELAY_PIN, HIGH);
    delay(500);
   }
  else if(input == OFF){
    lcd.setCursor(9,1);
    lcd.print("         ");
    lcd.setCursor(9,2);
    lcd.print("  LED OFF");
    digitalWrite(RELAY_PIN, LOW);
    delay(500);
   }
 }
//void display_(){
//    if (mode == 1){
//        lcd.setCursor(0,0);
//        lcd.print("    Password    ");
//        lcd.setCursor(0,1);
//        lcd.print("      RFID      ");
//    }
//    else if (mode == 2){
//          lcd.setCursor(0,0);
//          lcd.print(" Enter password ");
//          lcd.setCursor(0,0);
//          lcd.print("password: ");
//          if (customKey >= '0' && customKey <= '9'){
//             password[i] = customKey;
//             i++;
//             for(int i = 0; i < 4;i++){
//                if (password[i] >= '0' && password[i] <= '9'){
//                    lcd.print('*');
//                }  
//             }
//    }
//    }
//}
void setup()
{
  pinMode(RELAY_PIN, OUTPUT);
  lcd.init();                      // initialize the lcd 
  lcd.backlight();
  lcd.createChar(0, arrow);
  lcd.home();
  Serial.begin(9600);
  SPI.begin();
  mfrc522.PCD_Init();
  pinMode(led, OUTPUT);
  digitalWrite(led, LOW);
  menu1 = {
    "MAINMENU",
    NULL,
    "  MENU 1",
    "  MENU 2",NULL,
    "  MENU 3",NULL,
    "  MENU 4",
    &menu2,
  };
  menu2 = {
    "2NDMENU",
    &menu1,
    "  MENU 5",
    "  MENU 6",NULL,
    "  MENU 7",NULL,
    "  MENU 8",
    &menu3,
  };
  menu3 = {
    "3NDMENU",
    &menu2,
    "  LED CONTROL ",
    "  ON LED      ",&activation,
    "  OFF LED     ",&activation,
    "  NONE        ",
    &menu4,
  };
  menu4 = {
    "4NDMENU",
    &menu3,
    "  PASSWORD      ",
    "  Enter password",NULL,
    "                ",NULL,
    "                ",
    &menu5,
  };
  menu5 = {
    "5NDMENU",
    &menu4,
    "  RFID CARD     ",
    "  scanning card ",NULL,
    "                ",NULL,
    "                ",
    NULL,
  };
}
  
void loop()
{
  unsigned char select = 0;
  unsigned char mode = 0;
  signed char result = 1;
  char password[4] = "";
  displayMenu(&select, ' ');
  while(1){
    /////////////////////////////////////////// LOG IN MODE///////////////////////////////////////////////
    char customKey = customKeypad.getKey();
    if(mode == 1){  // LOG IN 
      if(customKey >= '0' && customKey <= '9'){
        lcd.setCursor(10+i,1);
        password[i]=customKey;
        lcd.print(password[i]);
        i++;
        if(i==4){
          lcd.setCursor(0,2);
          if(password[0]==initial_password[0]&&password[1]==initial_password[1]&&password[2]==initial_password[2]&&password[3]==initial_password[3]) result = 1;
          else result = 0;
          if(result == 1){
              lcd.setCursor(0,3);
              lcd.print("successfully log in");
              mode = 0;
            }
           else {
              lcd.setCursor(10,1);
              lcd.print(password);
              lcd.setCursor(10,2);
              lcd.print(initial_password);
              lcd.setCursor(0,3);
              lcd.print("fail to log in     ");
              for(int j=0;j<4;j++){
                password[j]="";
                }
            }
          i=0;
        }
      }
    }
    if(mode == 2){
      if ( ! mfrc522.PICC_IsNewCardPresent()) { 
        return; 
      }
      if ( ! mfrc522.PICC_ReadCardSerial()) {  
        return;  
      }
      for (unsigned char id_count = 0; id_count < mfrc522.uid.size; id_count++) { 
        UID[id_count] = mfrc522.uid.uidByte[id_count];
      }
      if (UID[i] == ID1[i])
      {
        RF_FLAG++;
        if(RF_FLAG = RF_FLAG%2){
          digitalWrite(led, RF_FLAG);
          if(RF_FLAG == ON){
            lcd.setCursor(0,3);
            lcd.print("successfully log in");
            mfrc522.PICC_HaltA();  
            mfrc522.PCD_StopCrypto1();
          }else{
            lcd.setCursor(0,3);
            lcd.print("fail to log in     ");
          }
        }
      }
    }
    lcd.setCursor(5,3);
    lcd.print(mode);
    /////////////////////////////////////////// CONTROLLING KEYPAD///////////////////////////////////////////////
    if(customKey == UP && mode == 0){   // GO UP
      select = getSelect(select, customKey);
     }
    if(customKey == DOWN && mode == 0){   // GO DOWN
      select = getSelect(select, customKey);
     }
    if(customKey == RIGHT && mode == 0){    // GO TO PREV MENU
      menuPtr=(menuPtr->NEXT!=NULL)?(menuPtr->NEXT):(menuPtr);
      displayMenu(&select, customKey);
     }
    if(customKey == LEFT && mode == 0){   // GO TO NEXT MENU
      menuPtr=(menuPtr->PRE!=NULL)?(menuPtr->PRE):(menuPtr);
      displayMenu(&select, customKey);
     }
    if(customKey == GO && mode == 0){
      switch(select){
        case 0:
          break;
        case 1:
          break;
        case 2:
          if(menuPtr->menuID == "4NDMENU"){
            lcd.clear();
            lcd.setCursor(0,0);
            lcd.print(" Enter password ");
            lcd.setCursor(0,1);
            lcd.print("password: ");
            mode=1;
          }
          else if(menuPtr->menuID == "5NDMENU"){
            lcd.clear();
            lcd.setCursor(0,0);
            lcd.print(" Scanning RF card ");
            mode=2;
          }
          break;
        case 3: 
          break;
      }
    }
    customKey = '*';
  }
}

unsigned char getSelect(unsigned int select, char key)
{
    unsigned char point = select;
    if(key == UP){
      lcd.setCursor(0,point);
      lcd.print(' ');
      point = (point == 0)?(3):(point-1);
    }
    else if(key == DOWN){
      lcd.setCursor(0,point);
      lcd.print(' ');
      point = (point == 3)?(0):(point+1);
    }
    lcd.setCursor(0,point);
    lcd.write(0);
    return point;
}
void displayMenu(unsigned char *select,char customKey)
{
  unsigned char point = *select;
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print(menuPtr->list1);
  lcd.setCursor(0,1);
  lcd.print(menuPtr->list2);
  lcd.setCursor(0,2);
  lcd.print(menuPtr->list3);
  lcd.setCursor(0,3);
  lcd.print(menuPtr->list4);
  *select = getSelect(point, customKey);
}